{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Vault by HashiCorp Quickstart for AWS: Vault instances sub-template",
    "Parameters": {
        "EmailAddress": {
            "Type": "String",
            "Description": "Email Address for SNS Topic. Alarms for Vault instance memory utilzation"
        },
        "KeyPair": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "Default": "id_rsa_aws",
            "ConstraintDescription": "Must be the name of an existing EC2 KeyPair."
        },
        "vaultInstanceType": {
            "Type": "String",
            "Description": "vault node instance type",
            "AllowedValues": [
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge"
            ],
            "ConstraintDescription": "Choose an instance type. m3.medium or larger recommended.",
            "Default": "m3.medium"
        },
        "AtlasToken": {
            "Type": "String",
            "Description": "Optional - Atlas token - used to check vault nodes into Atlas"
        }
    },
    "Mappings": {
        "AWSAMIRegionMap": {
            "AMI": {
                "US1404HVM": "ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20160406"
            },
            "eu-west-1": {
                "US1404HVM": "ami-ed82e39e"
            },
            "ap-northeast-1": {
                "US1404HVM": "ami-f5bbab9b"
            },
            "ap-northeast-2": {
                "US1404HVM": "ami-45975c2b"
            },
            "ap-south-1": {
                "US1404HVM": "ami-42569022"
            },
            "ap-southeast-1": {
                "US1404HVM": "ami-b6c613d5"
            },
            "ap-southeast-2": {
                "US1404HVM": "ami-2a644649"
            },
            "eu-central-1": {
                "US1404HVM": "ami-821cfded"
            },
            "sa-east-1": {
                "US1404HVM": "ami-6008870c"
            },
            "us-east-1": {
                "US1404HVM": "ami-2b594f41"
            },
            "us-west-1": {
                "US1404HVM": "ami-12512d72"
            },
            "us-west-2": {
                "US1404HVM": "ami-63ac5803"
            }
        }
    },
    "Resources": {
        "VaultSNSTopic": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
                "Subscription": [{
                    "Endpoint": {
                        "Ref": "EmailAddress"
                    },
                    "Protocol": "email"
                }]
            }
        },
        "Vault1MemoryAlarm": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "Memory alarm for my instance",
                "AlarmActions": [{
                    "Ref": "VaultSNSTopic"
                }],
                "MetricName": "MemoryUtilization",
                "Namespace": "AWS/EC2",
                "Statistic": "Average",
                "Period": "60",
                "EvaluationPeriods": "3",
                "Threshold": "75",
                "ComparisonOperator": "GreaterThanThreshold",
                "Dimensions": [{
                    "Name": "InstanceId",
                    "Value": {
                        "Ref": "vault1"
                    }
                }]
            }
        },
        "Vault2MemoryAlarm": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "Memory alarm for my instance",
                "AlarmActions": [{
                    "Ref": "VaultSNSTopic"
                }],
                "MetricName": "MemoryUtilization",
                "Namespace": "AWS/EC2",
                "Statistic": "Average",
                "Period": "60",
                "EvaluationPeriods": "3",
                "Threshold": "75",
                "ComparisonOperator": "GreaterThanThreshold",
                "Dimensions": [{
                    "Name": "InstanceId",
                    "Value": {
                        "Ref": "vault2"
                    }
                }]
            }
        },
        "VaultLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": {
                    "Fn::Join": [
                        "-", [{
                                "Ref": "AWS::StackName"
                            },
                            "Vault-Audit-Logs"
                        ]
                    ]
                },
                "RetentionInDays": 7
            }
        },
        "vaultinstancerole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                        "Effect": "Allow",
                        "Principal": {
                            "Service": ["ec2.amazonaws.com"]
                        },
                        "Action": ["sts:AssumeRole"]
                    }]
                },
                "Path": "/",
                "Policies": [{
                    "PolicyName": "root",
                    "PolicyDocument": {

                        "Version": "2012-10-17",
                        "Statement": [{
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents",
                                "logs:DescribeLogStreams"
                            ],
                            "Resource": [
                                "arn:aws:logs:*:*:*"
                            ]
                        }]
                    }
                }]
            }
        },
        "vaultinstanceprofile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [{
                    "Ref": "vaultinstancerole"
                }]
            }
        },
        "vault1": {
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "vault_install": [ "install_cloudwatch_logs_and_mon_scripts", "install_vault", "run_vault" ]
                    },
                    "install_cloudwatch_logs_and_mon_scripts": {
                        "packages": {
                            "apt": {
                                "unzip": [],
                                "libwww-perl": [],
                                "libdatetime-perl": []
                            }
                        },
                        "sources": {
                            "/usr/local": "http://aws-cloudwatch.s3.amazonaws.com/downloads/CloudWatchMonitoringScripts-1.2.1.zip"
                        },
                        "files": {
                            "/etc/cron.hourly/cloudwatch-monitoring": {
                                "content": [ "*/5 * * * * /usr/local/aws-scripts-mon/mon-put-instance-data.pl --mem-util --mem-used --from-cron" ],
                                "mode": "000700",
                                "owner": "root",
                                "group": "root"
                            },
                            "/usr/local/awslogs-agent-setup.py": {
                                "source": "https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py",
                                "mode": "000700",
                                "owner": "root",
                                "group": "root"
                            }
                        },
                        "commands": {
                            "01_run_awslogs_agent_setup.py": {
                                "command": {
                                    "Fn::Sub": ["python /usr/local/awslogs-agent-setup.py -n -r ${Region} -c https://s3-us-west-2.amazonaws.com/43d3.brandonchav.is/vault/awslogs-config-file", {
                                        "Region": {
                                            "Ref": "AWS::Region"
                                        }
                                    }]
                                }
                            },
                            "02_make_mon_put_instance_data_exececutable": {
                                "command": "chmod +x /usr/local/aws-scripts-mon/mon-put-instance-data.pl"
                            }
                        }
                    },
                    "install_vault": {
                        "sources": {
                            "/usr/local/bin": "https://releases.hashicorp.com/vault/0.6.1/vault_0.6.1_linux_amd64.zip"
                        },
                        "files": {
                            "/etc/vault.d/vault.hcl": {
                                "source": "https://s3-us-west-2.amazonaws.com/43d3.brandonchav.is/vault/vault.hcl",
                                "mode": "000700",
                                "owner": "root",
                                "group": "root"
                            },
                            "/etc/init/vault-upstart.conf": {
                                "source": "https://s3-us-west-2.amazonaws.com/43d3.brandonchav.is/vault/vault-upstart.conf",
                                "mode": "000700",
                                "owner": "root",
                                "group": "root"
                            }
                        },
                        "commands": {
                            "01_chmod_and_chown_vault": {
                                "command": "chmod 0755 /usr/local/bin/vault && chown root:root /usr/local/bin/vault",
                            }
                        }
                    },
                    "run_vault": {
                        "commands": {
                            "01_run_vault_binary": {
                                "command": "vault server -config /etc/vault.d/vault.hcl",
                                "cwd": "/usr/local/bin/"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0", {
                            "Fn::GetAZs": {
                                "Ref": "AWS::Region"
                            }
                        }
                    ]
                },
                "InstanceType": {
                    "Ref": "vaultInstanceType"
                },
                "KeyName": {
                    "Ref": "KeyPair"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap", {
                            "Ref": "AWS::Region"
                        },
                        "US1404HVM"
                    ]
                },
                "BlockDeviceMappings": [{
                    "DeviceName": "/dev/sda1",
                    "Ebs": {
                        "VolumeSize": "20",
                        "VolumeType": "gp2"
                    }
                }],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "", [
                                "#!/bin/bash -e\n",
                                "mkdir -p /opt/vault/policies/ /opt/vault/scripts/ /etc/vault.d/\n",
                                "apt-get -y update\n",
                                "#install the cfn-init tools\n",
                                "apt-get -y install python-pip\n",
                                "pip install pyOpenSSL ndg-httpsclient pyasn1\n",
                                "easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n",
                                "ln -s /root/aws-cfn-bootstrap-latest/init/ubuntu/cfn-hup /etc/init.d/cfn-hup\n",
                                "/usr/local/bin/cfn-init",
                                " --verbose ",
                                " --stack ", {
                                    "Ref": "AWS::StackName"
                                },
                                " --resource vault1",
                                " --configsets vault_install",
                                " --region ", {
                                    "Ref": "AWS::Region"
                                }, "\n",

                                "/usr/local/bin/cfn-signal -e $? ",
                                "  --stack ", {
                                    "Ref": "AWS::StackName"
                                },
                                " --resource vault1 ",
                                " --region ", {
                                    "Ref": "AWS::Region"
                                }, "\n"
                            ]
                        ]
                    }
                },
                "IamInstanceProfile": {
                    "Ref": "vaultinstanceprofile"
                },
                "Tags": [{
                    "Key": "Name",
                    "Value": {
                        "Fn::Join": [
                            "-", [{
                                    "Ref": "AWS::StackName"
                                },
                                "vault1"
                            ]
                        ]
                    }
                }]
            }
        },
        "vault1RecoveryAlarm": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "EC2 Autorecovery for vault1 node. Autorecover if we fail EC2 status checks for 5 minutes.",
                "Namespace": "AWS/EC2",
                "MetricName": "StatusCheckFailed_System",
                "Statistic": "Minimum",
                "Period": "60",
                "EvaluationPeriods": "5",
                "ComparisonOperator": "GreaterThanThreshold",
                "Threshold": "0",
                "AlarmActions": [{
                    "Ref": "VaultSNSTopic"
                }, {
                    "Fn::Join": [
                        "", [
                            "arn:aws:automate:", {
                                "Ref": "AWS::Region"
                            },
                            ":ec2:recover"
                        ]
                    ]
                }],
                "Dimensions": [{
                    "Name": "InstanceId",
                    "Value": {
                        "Ref": "vault1"
                    }
                }]
            }
        },
        "vault2": {
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "configSets": {
                        "vault_install": ["install_cloudwatch_logs_and_mon_scripts", "install_vault", "run_vault"]
                    },
                    "install_cloudwatch_logs_and_mon_scripts": {
                        "packages": {
                            "apt": {
                                "unzip": [],
                                "libwww-perl": [],
                                "libdatetime-perl": []
                            }
                        },
                        "sources": {
                            "/usr/local": "http://aws-cloudwatch.s3.amazonaws.com/downloads/CloudWatchMonitoringScripts-1.2.1.zip"
                        },
                        "files": {
                            "/etc/cron.hourly/cloudwatch-monitoring": {
                                "content": [ "*/5 * * * * /usr/local/aws-scripts-mon/mon-put-instance-data.pl --mem-util --mem-used --from-cron" ],
                                "mode": "000700",
                                "owner": "root",
                                "group": "root"
                            },
                            "/usr/local/awslogs-agent-setup.py": {
                                "source": "https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py",
                                "mode": "000700",
                                "owner": "root",
                                "group": "root"
                            }
                        },
                        "commands": {
                            "01_run_awslogs_agent_setup.py": {
                                "command": {
                                    "Fn::Sub": ["python /usr/local/awslogs-agent-setup.py -n -r ${Region} -c https://s3-us-west-2.amazonaws.com/43d3.brandonchav.is/vault/awslogs-config-file", {
                                        "Region": {
                                            "Ref": "AWS::Region"
                                        }
                                    }]
                                }
                            },
                            "02_make_mon_put_instance_data_exececutable": {
                                "command": "chmod +x /usr/local/aws-scripts-mon/mon-put-instance-data.pl"
                            }
                        }
                    },
                    "install_vault": {
                        "sources": {
                            "/usr/local/bin": "https://releases.hashicorp.com/vault/0.6.1/vault_0.6.1_linux_amd64.zip"
                        },
                        "files": {
                            "/etc/vault.d/vault.hcl": {
                                "source": "https://s3-us-west-2.amazonaws.com/43d3.brandonchav.is/vault/vault.hcl",
                                "mode": "000700",
                                "owner": "root",
                                "group": "root"
                            },
                            "/etc/init/vault-upstart.conf": {
                                "source": "https://s3-us-west-2.amazonaws.com/43d3.brandonchav.is/vault/vault-upstart.conf",
                                "mode": "000700",
                                "owner": "root",
                                "group": "root"
                            }
                        },
                        "commands": {
                            "01_chmod_and_chown_vault": {
                                "command": "chmod 0755 /usr/local/bin/vault && chown root:root /usr/local/bin/vault",
                            }
                        }
                    },
                    "run_vault": {
                        "commands": {
                            "01_run_vault_binary": {
                                "command": "vault server -config /etc/vault.d/vault.hcl",
                                "cwd": "/usr/local/bin/"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        "1", {
                            "Fn::GetAZs": {
                                "Ref": "AWS::Region"
                            }
                        }
                    ]
                },
                "InstanceType": {
                    "Ref": "vaultInstanceType"
                },
                "KeyName": {
                    "Ref": "KeyPair"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap", {
                            "Ref": "AWS::Region"
                        },
                        "US1404HVM"
                    ]
                },
                "BlockDeviceMappings": [{
                    "DeviceName": "/dev/sda1",
                    "Ebs": {
                        "VolumeSize": "20",
                        "VolumeType": "gp2"
                    }
                }],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "", [
                                "#!/bin/bash -e\n",
                                "mkdir -p /opt/vault/policies/ /opt/vault/scripts/ /etc/vault.d/\n",
                                "apt-get -y update\n",
                                "#install the cfn-init tools\n",
                                "apt-get -y install python-pip\n",
                                "pip install pyOpenSSL ndg-httpsclient pyasn1\n",
                                "easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n",
                                "ln -s /root/aws-cfn-bootstrap-latest/init/ubuntu/cfn-hup /etc/init.d/cfn-hup\n",
                                "/usr/local/bin/cfn-init",
                                " --verbose ",
                                " --stack ", {
                                    "Ref": "AWS::StackName"
                                },
                                " --resource vault2",
                                " --configsets vault_install",
                                " --region ", {
                                    "Ref": "AWS::Region"
                                }, "\n",

                                "/usr/local/bin/cfn-signal -e $? ",
                                " --stack ", {
                                    "Ref": "AWS::StackName"
                                },
                                "  --resource vault2 ",
                                "  --region ", {
                                    "Ref": "AWS::Region"
                                }, "\n"
                            ]
                        ]
                    }
                },
                "IamInstanceProfile": {
                    "Ref": "vaultinstanceprofile"
                },
                "Tags": [{
                    "Key": "Name",
                    "Value": {
                        "Fn::Join": [
                            "-", [{
                                    "Ref": "AWS::StackName"
                                },
                                "vault2"
                            ]
                        ]
                    }
                }]
            }
        },
        "vault2RecoveryAlarm": {
            "Type": "AWS::CloudWatch::Alarm",
            "Properties": {
                "AlarmDescription": "EC2 Autorecovery for vault2 node. Autorecover if we fail EC2 status checks for 5 minutes.",
                "Namespace": "AWS/EC2",
                "MetricName": "StatusCheckFailed_System",
                "Statistic": "Minimum",
                "Period": "60",
                "EvaluationPeriods": "5",
                "ComparisonOperator": "GreaterThanThreshold",
                "Threshold": "0",
                "AlarmActions": [{
                    "Ref": "VaultSNSTopic"
                }, {
                    "Fn::Join": [
                        "", [
                            "arn:aws:automate:", {
                                "Ref": "AWS::Region"
                            },
                            ":ec2:recover"
                        ]
                    ]
                }],
                "Dimensions": [{
                    "Name": "InstanceId",
                    "Value": {
                        "Ref": "vault2"
                    }
                }]
            }
        }
    },
    "Outputs": {
        "VaultNode1PrivateIp": {
            "Description": "Private IP of Vault Node #1",
            "Value": {
                "Fn::GetAtt": ["vault1", "PrivateIp"]
            }
        },
        "VaultNode2PrivateIp": {
            "Description": "Private IP of Vault Node #2",
            "Value": {
                "Fn::GetAtt": ["vault2", "PrivateIp"]
            }
        }
    }
}
